This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2021/CVE-2023-32700 patched) (preloaded format=latex 2023.6.13)  20 OCT 2023 23:46
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**_formulas
(./_formulas.tex
LaTeX2e <2020-10-01> patch level 4
L3 programming layer <2021-05-07> (/usr/share/texlive/texmf-dist/tex/latex/base
/article.cls
Document Class: article 2020/04/10 v1.4m Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2020/04/10 v1.4m Standard LaTeX file (size option)
)
\c@part=\count179
\c@section=\count180
\c@subsection=\count181
\c@subsubsection=\count182
\c@paragraph=\count183
\c@subparagraph=\count184
\c@figure=\count185
\c@table=\count186
\abovecaptionskip=\skip47
\belowcaptionskip=\skip48
\bibindent=\dimen138
) (/usr/share/texlive/texmf-dist/tex/latex/base/ifthen.sty
Package: ifthen 2014/09/29 v1.1c Standard LaTeX ifthen package (DPC)
) (/usr/share/texlive/texmf-dist/tex/latex/graphics/epsfig.sty
Package: epsfig 2017/06/25 v1.7b (e)psfig emulation (SPQR)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2020/09/09 v1.2b Enhanced LaTeX Graphics (DPC,SPQR)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks15
) (/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2020/08/30 v1.4c Standard LaTeX Graphics (DPC,SPQR)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
) (/usr/share/texlive/texmf-dist/tex/latex/graphics-cfg/graphics.cfg
File: graphics.cfg 2016/06/04 v1.11 sample graphics configuration
)
Package graphics Info: Driver file: dvips.def on input line 105.
(/usr/share/texlive/texmf-dist/tex/latex/graphics-def/dvips.def
File: dvips.def 2017/06/20 v3.1d Graphics/color driver for dvips
))
\Gin@req@height=\dimen139
\Gin@req@width=\dimen140
)
\epsfxsize=\dimen141
\epsfysize=\dimen142
) (/usr/share/texlive/texmf-dist/tex/latex/base/inputenc.sty
Package: inputenc 2020/08/01 v1.3d Input encoding file
\inpenc@prehook=\toks16
\inpenc@posthook=\toks17
) (/usr/share/texlive/texmf-dist/tex/latex/xcolor/xcolor.sty
Package: xcolor 2016/05/11 v2.12 LaTeX color extensions (UK)
(/usr/share/texlive/texmf-dist/tex/latex/graphics-cfg/color.cfg
File: color.cfg 2016/01/02 v1.6 sample color configuration
)
Package xcolor Info: Driver file: dvips.def on input line 225.
Package xcolor Info: Model `cmy' substituted by `cmy0' on input line 1348.
Package xcolor Info: Model `RGB' extended on input line 1364.
Package xcolor Info: Model `HTML' substituted by `rgb' on input line 1366.
Package xcolor Info: Model `Hsb' substituted by `hsb' on input line 1367.
Package xcolor Info: Model `tHsb' substituted by `hsb' on input line 1368.
Package xcolor Info: Model `HSB' substituted by `hsb' on input line 1369.
Package xcolor Info: Model `Gray' substituted by `gray' on input line 1370.
Package xcolor Info: Model `wave' substituted by `hsb' on input line 1371.
) (/usr/share/texlive/texmf-dist/tex/latex/newunicodechar/newunicodechar.sty
Package: newunicodechar 2018/04/08 v1.2 Defining Unicode characters
)

Package newunicodechar Warning: Redefining Unicode character on input line 8.


Package newunicodechar Warning: Redefining Unicode character on input line 9.

(/usr/share/texlive/texmf-dist/tex/latex/l3backend/l3backend-dvips.def
File: l3backend-dvips.def 2021-05-07 L3 backend support: dvips
\l__pdf_internal_box=\box47
\g__pdf_backend_object_int=\count187
\l__pdf_backend_content_box=\box48
\l__pdf_backend_model_box=\box49
\g__pdf_backend_annotation_int=\count188
\g__pdf_backend_link_int=\count189
\g__pdf_backend_link_sf_int=\count190
)
No file _formulas.aux.
\openout1 = `_formulas.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 12.
LaTeX Font Info:    ... okay on input line 12.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 13.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 13.
[1

] [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] [12]

LaTeX Warning: Command \texttimes invalid in math mode on input line 49.


LaTeX Warning: Command \texttimes invalid in math mode on input line 49.

Missing character: There is no Ö in font cmr7!
[13] [14] [15] [16]

! Package inputenc Error: Unicode character â‰  (U+2260)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.61 $ S(a_i,j) â‰ 
                    a_i,j $
You may provide a definition with
\DeclareUnicodeCharacter 

[17]

! Package inputenc Error: Unicode character â‰  (U+2260)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.64 $ S(a_i,j) \oplus a_i,j â‰ 
                                 0xFF_16 $
You may provide a definition with
\DeclareUnicodeCharacter 

[18] [19] [20] [21] [22] [23] [24] [25] [26] [27] [28] [29] [30] [31] [32] [33]
[34] [35] [36] [37] [38] [39] [40] [41] [42] [43] [44] [45] [46] [47] [48] [49]
[50] [51] [52] [53] [54] [55] [56] [57] [58] [59] [60] [61] [62] [63] [64] [65]
[66] [67] [68] [69] [70] [71] [72]
Overfull \hbox (9.0556pt too wide) in paragraph at lines 229--231
[]$\OML/cmm/m/it/10 FK[] \OT1/cmr/m/n/10 = (\OML/cmm/m/it/10 a\OT1/cmr/m/n/10 3
\OML/cmm/m/it/10 b\OT1/cmr/m/n/10 1\OML/cmm/m/it/10 bac\OT1/cmr/m/n/10 6)\OML/c
mm/m/it/10 ; FK[] \OT1/cmr/m/n/10 = (56\OML/cmm/m/it/10 aa\OT1/cmr/m/n/10 3350)
\OML/cmm/m/it/10 ; FK[] \OT1/cmr/m/n/10 = (677\OML/cmm/m/it/10 d\OT1/cmr/m/n/10
 9197)\OML/cmm/m/it/10 ; FK[] \OT1/cmr/m/n/10 = (\OML/cmm/m/it/10 b\OT1/cmr/m/n
/10 27022\OML/cmm/m/it/10 dc\OT1/cmr/m/n/10 )$
 []

[73] [74] [75] [76] [77] [78] [79] [80] [81]

LaTeX Warning: Command \textendash invalid in math mode on input line 256.

[82] [83] [84] [85] [86] [87] [88] [89] [90] [91] [92] [93] [94] [95] [96] [97]
[98] [99] [100] [101] [102] [103] [104] [105] [106] [107] [108] [109] [110] [11
1] [112] [113] [114] [115] [116] [117] [118] [119] [120] [121] [122] [123] [124
] [125] [126] [127] [128] [129] [130] [131] [132] [133] [134] [135] [136] [137]
[138] [139] [140] [141] [142] [143] [144] [145] [146] [147] [148] [149] [150] [
151] [152] [153] [154] [155] [156] [157] [158] [159] [160] [161] [162] [163] [1
64]
Overfull \hbox (18.52748pt too wide) in paragraph at lines 505--507
[]$\OML/cmm/m/it/10 r[] \OT1/cmr/m/n/10 = \OML/cmm/m/it/10 S[]\OT1/cmr/m/n/10 (
\OML/cmm/m/it/10 w[]\OT1/cmr/m/n/10 ) \OMS/cmsy/m/n/10 ^^H \OML/cmm/m/it/10 S[]
\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 w[]\OT1/cmr/m/n/10 ) \OMS/cmsy/m/n/10 ^^H \OM
L/cmm/m/it/10 MULx\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 S[]\OT1/cmr/m/n/10 (\OML/cm
m/m/it/10 w[]\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 ; \OT1/cmr/m/n/10 0\OML/cmm/m/it
/10 x\OT1/cmr/m/n/10 1\OML/cmm/m/it/10 B\OT1/cmr/m/n/10 ) \OMS/cmsy/m/n/10 ^^H 
\OML/cmm/m/it/10 S[]\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 w[]\OT1/cmr/m/n/10 ) \OMS
/cmsy/m/n/10 ^^H \OML/cmm/m/it/10 MULx\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 S[]\OT1
/cmr/m/n/10 (\OML/cmm/m/it/10 w[]\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 ; \OT1/cmr/m
/n/10 0\OML/cmm/m/it/10 x\OT1/cmr/m/n/10 1\OML/cmm/m/it/10 B\OT1/cmr/m/n/10 )$
 []

[165] [166] [167] [168] [169] [170] [171] [172] [173] [174]
Overfull \hbox (13.54233pt too wide) in paragraph at lines 535--537
[]$\OML/cmm/m/it/10 r[] \OT1/cmr/m/n/10 = \OML/cmm/m/it/10 S[]\OT1/cmr/m/n/10 (
\OML/cmm/m/it/10 w[]\OT1/cmr/m/n/10 ) \OMS/cmsy/m/n/10 ^^H \OML/cmm/m/it/10 S[]
\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 w[]\OT1/cmr/m/n/10 ) \OMS/cmsy/m/n/10 ^^H \OM
L/cmm/m/it/10 MULx\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 S[]\OT1/cmr/m/n/10 (\OML/cm
m/m/it/10 w[]\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 ; \OT1/cmr/m/n/10 0\OML/cmm/m/it
/10 x\OT1/cmr/m/n/10 69) \OMS/cmsy/m/n/10 ^^H \OML/cmm/m/it/10 S[]\OT1/cmr/m/n/
10 (\OML/cmm/m/it/10 w[]\OT1/cmr/m/n/10 ) \OMS/cmsy/m/n/10 ^^H \OML/cmm/m/it/10
 MULx\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 S[]\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 w[]
\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 ; \OT1/cmr/m/n/10 0\OML/cmm/m/it/10 x\OT1/cmr
/m/n/10 69)$
 []

[175]
! Missing { inserted.
<to be read again> 
                   \begingroup 
l.538 $ MUL_Î±
              $
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)


! Package inputenc Error: Unicode character Î± (U+03B1)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.538 $ MUL_Î±
              $
You may provide a definition with
\DeclareUnicodeCharacter 

! Missing } inserted.
<inserted text> 
                }
l.538 $ MUL_Î±$
               
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[176]
! Missing { inserted.
<to be read again> 
                   \begingroup 
l.541 $ DIV_Î±
              $
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)


! Package inputenc Error: Unicode character Î± (U+03B1)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.541 $ DIV_Î±
              $
You may provide a definition with
\DeclareUnicodeCharacter 

! Missing } inserted.
<inserted text> 
                }
l.541 $ DIV_Î±$
               
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[177]
! Missing { inserted.
<to be read again> 
                   \begingroup 
l.544 $ MUL_Î±
              (c) = (MULxPOW(c, 23, 0xA9) || MULxPOW(c, 245, 0xA9) || MULxPO...
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)


! Package inputenc Error: Unicode character Î± (U+03B1)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.544 $ MUL_Î±
              (c) = (MULxPOW(c, 23, 0xA9) || MULxPOW(c, 245, 0xA9) || MULxPO...

You may provide a definition with
\DeclareUnicodeCharacter 

! Missing } inserted.
<inserted text> 
                }
l.544 ...W(c, 48, 0xA9) || MULxPOW(c, 239, 0xA9))$
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (87.35075pt too wide) in paragraph at lines 544--546
[]$\OML/cmm/m/it/10 MUL[]$
 []

[178]
! Missing { inserted.
<to be read again> 
                   \begingroup 
l.547 $ DIV_Î±
              (c) = (MULxPOW(c, 16, 0xA9) || MULxPOW(c, 39, 0xA9) || MULxPOW...
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)


! Package inputenc Error: Unicode character Î± (U+03B1)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.547 $ DIV_Î±
              (c) = (MULxPOW(c, 16, 0xA9) || MULxPOW(c, 39, 0xA9) || MULxPOW...

You may provide a definition with
\DeclareUnicodeCharacter 

! Missing } inserted.
<inserted text> 
                }
l.547 ...POW(c, 6, 0xA9) || MULxPOW(c, 64, 0xA9))$
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (69.44792pt too wide) in paragraph at lines 547--549
[]$\OML/cmm/m/it/10 DIV[]$
 []

[179] [180] [181] [182] [183] [184] [185] [186] [187]
! Missing { inserted.
<to be read again> 
                   \begingroup 
l.574 ...s_{0,2} || s_{0,3} || 0x00) \oplus MUL_Î±
                                                  (s_{0,0}) \oplus s_2 \oplu...
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)


! Package inputenc Error: Unicode character Î± (U+03B1)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.574 ...s_{0,2} || s_{0,3} || 0x00) \oplus MUL_Î±
                                                  (s_{0,0}) \oplus s_2 \oplu...

You may provide a definition with
\DeclareUnicodeCharacter 

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.574 ...0} || s_{11,1} || s_{11,2}) \oplus DIV_Î±
                                                  (s_{11,3}) \oplus F$
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)


! Package inputenc Error: Unicode character Î± (U+03B1)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.574 ...0} || s_{11,1} || s_{11,2}) \oplus DIV_Î±
                                                  (s_{11,3}) \oplus F$
You may provide a definition with
\DeclareUnicodeCharacter 

! Missing } inserted.
<inserted text> 
                }
l.574 ...{11,2}) \oplus DIV_Î±(s_{11,3}) \oplus F$
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.574 ...{11,2}) \oplus DIV_Î±(s_{11,3}) \oplus F$
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[188] [189] [190] [191] [192]
! Missing { inserted.
<to be read again> 
                   \begingroup 
l.589 ...s_{0,2} || s_{0,3} || 0x00) \oplus MUL_Î±
                                                  (s_{0,0}) \oplus s_2 \oplu...
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)


! Package inputenc Error: Unicode character Î± (U+03B1)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.589 ...s_{0,2} || s_{0,3} || 0x00) \oplus MUL_Î±
                                                  (s_{0,0}) \oplus s_2 \oplu...

You may provide a definition with
\DeclareUnicodeCharacter 

! Missing { inserted.
<to be read again> 
                   \begingroup 
l.589 ...0} || s_{11,1} || s_{11,2}) \oplus DIV_Î±
                                                  (s_{11,3})$
A left brace was mandatory here, so I've put one in.
You might want to delete and/or insert some corrections
so that I will find a matching right brace soon.
(If you're confused by all this, try typing `I}' now.)


! Package inputenc Error: Unicode character Î± (U+03B1)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.589 ...0} || s_{11,1} || s_{11,2}) \oplus DIV_Î±
                                                  (s_{11,3})$
You may provide a definition with
\DeclareUnicodeCharacter 

! Missing } inserted.
<inserted text> 
                }
l.589 ...,1} || s_{11,2}) \oplus DIV_Î±(s_{11,3})$
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.589 ...,1} || s_{11,2}) \oplus DIV_Î±(s_{11,3})$
                                                  
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[193] [194] [195] [196] [197] [198] [199] [200] [201] [202] [203] [204] [205] [
206] [207] [208] [209] [210] [211] [212] [213] [214] [215] [216] [217] [218] [2
19] [220] [221] [222] [223] [224] [225] [226] [227] [228] [229] [230] [231] [23
2] [233] [234] [235] [236] [237] [238] [239] [240] [241] [242] [243] [244] [245
] [246] [247] [248] [249] [250] [251] [252] [253] [254] [255] [256] [257] [258]
[259] [260] [261] [262] [263] [264] [265] [266] [267] [268] [269] [270] [271] [
272] [273] [274] [275] [276] [277] [278] [279] [280] [281] [282] [283] [284] [2
85] [286] [287] [288] [289] [290] [291] [292] [293] [294] [295] [296] [297] [29
8] [299] [300] [301] [302] [303] [304] [305] [306] [307] [308] [309] [310] [311
] [312] [313] [314] [315] [316] [317] [318] [319] [320] [321] [322] [323] [324]
[325] [326] [327]

! Package inputenc Error: Unicode character âˆ’ (U+2212)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.994 $ c_i = E_k(c_iâˆ’
                        1 \oplus m_i) $
You may provide a definition with
\DeclareUnicodeCharacter 

[328]

! Package inputenc Error: Unicode character âˆ’ (U+2212)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.997 $ c_n = E_k(c_nâˆ’
                        1 \oplus m_n) $
You may provide a definition with
\DeclareUnicodeCharacter 

[329] [330] [331] [332] [333] [334] [335]
Overfull \hbox (22.63031pt too wide) in alignment at lines 1022--1026
 [][][] []
 []

[336] [337] [338]
! Missing $ inserted.
<inserted text> 
                $
l.1040 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1040 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.1040 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \cr inserted.
<inserted text> 
                \cr 
l.1040 
       
I'm guessing that you meant to end an alignment here.

! Missing { inserted.
<inserted text> 
                {
l.1040 
       
I've put in what seems to be necessary to fix
the current column of the current alignment.
Try to go on, since this might almost work.

! Missing $ inserted.
<inserted text> 
                $
l.1040 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $$ inserted.
<to be read again> 
                   \par 
l.1040 
       
Displays can use special alignments (like \eqalignno)
only if nothing but the alignment itself is between $$'s.

! Misplaced alignment tab character &.
l.1041  ABCDEFGH &
                  =& V(i) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1041  ABCDEFGH &=&
                     V(i) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1042 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1042 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1042 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1042 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1042 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
l.1043  FOR &
              j= &0..63 \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1043  FOR & j= &
                  0..63 \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1044 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1044 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1044 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1044 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1044 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
l.1045  SS1 &
             =& (((RK[0] <<< 12) + RK[4] + (T_j <<< j)) <<< 7) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1045  SS1 &=&
                (((RK[0] <<< 12) + RK[4] + (T_j <<< j)) <<< 7) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1045  SS1 &=& (((RK[0] <<< 12) + RK[4] + (T_
                                              j <<< j)) <<< 7) \\
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1046 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1046 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1046 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1046 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1046 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1046 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1046 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1046 
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.1047  SS2 &
             =& SS1 \oplus (RK[0] <<< 12) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1047  SS2 &=&
                SS1 \oplus (RK[0] <<< 12) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1047  SS2 &=& SS1 \oplus
                           (RK[0] <<< 12) \\
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1048 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1048 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1048 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1048 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1048 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1048 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1048 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1048 
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.1049  TT1 &
             =& FF_j(RK[0], RK[1], RK[2]) + RK[3] + SS2 + {W}^{'}_j \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1049  TT1 &=&
                FF_j(RK[0], RK[1], RK[2]) + RK[3] + SS2 + {W}^{'}_j \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1049  TT1 &=& FF_
                   j(RK[0], RK[1], RK[2]) + RK[3] + SS2 + {W}^{'}_j \\
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1050 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1050 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1050 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1050 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1050 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1050 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1050 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1050 
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.1051  TT1 &
             =& GG_j(RK[4], RK[5], RK[6]) + RK[7] + SS1 + W_j \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1051  TT1 &=&
                GG_j(RK[4], RK[5], RK[6]) + RK[7] + SS1 + W_j \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.1051  TT1 &=& GG_
                   j(RK[4], RK[5], RK[6]) + RK[7] + SS1 + W_j \\
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1052 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1052 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1052 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1052 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1052 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Missing $ inserted.
<inserted text> 
                $
l.1052 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1052 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten \endgroup.
\@xeqncr ...pen \vskip \jot \@vspace@calcify {#1}}
                                                  
l.1052 
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.1053  RK[3] &
               =& RK[2] \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1053  RK[3] &=&
                  RK[2] \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1054 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1054 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1054 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1054 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1054 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
l.1055  RK[2] &
               =& (RK[1] <<< 9) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1055  RK[2] &=&
                  (RK[1] <<< 9) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1056 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1056 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1056 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1056 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1056 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
l.1057  RK[1] &
               =& RK[0] \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1057  RK[1] &=&
                  RK[0] \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1058 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1058 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1058 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1058 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1058 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
l.1059  RK[0] &
               =& TT1 \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1059  RK[0] &=&
                  TT1 \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1060 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1060 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1060 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1060 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1060 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
l.1061  RK[7] &
               =& RK[6] \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1061  RK[7] &=&
                  RK[6] \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1062 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1062 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1062 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1062 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1062 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
l.1063  RK[6] &
               =& (RK[5] <<< 19) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1063  RK[6] &=&
                  (RK[5] <<< 19) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1064 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1064 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1064 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1064 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1064 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
l.1065  RK[5] &
               =& RK[4] \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1065  RK[5] &=&
                  RK[4] \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1066 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1066 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1066 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1066 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1066 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
l.1067  RK[4] &
               =& P0(TT2) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1067  RK[4] &=&
                  P0(TT2) \\
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1068 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1068 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1068 
       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1068 
       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1068 
       
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1070  \end
            {eqnarray*}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1070  \end
            {eqnarray*}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1070  \end
            {eqnarray*}
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1070  \end
            {eqnarray*}
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \noalign.
\@xeqncr [#1]->\ifnum 0=`{\fi }\@@eqncr \noalign 
                                                 {\penalty \@eqpen \vskip \j...
l.1070  \end
            {eqnarray*}
I expect to see \noalign only after the \cr of
an alignment. Proceed, and I'll ignore this case.

! Misplaced alignment tab character &.
\reserved@a ->&
                & &
l.1070  \end{eqnarray*}
                       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& &
                  &
l.1070  \end{eqnarray*}
                       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
\reserved@a ->& & &
                   
l.1070  \end{eqnarray*}
                       
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced \cr.
\@@eqncr ...l \@eqnswtrue \global \@eqcnt \z@ \cr 
                                                  
l.1070  \end{eqnarray*}
                       
I can't figure out why you would want to use a tab mark
or \cr or \span just now. If something like a right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Extra }, or forgotten \endgroup.
\endeqnarray ->\@@eqncr \egroup 
                                \global \advance \c@equation \m@ne $$\@ignor...
l.1070  \end{eqnarray*}
                       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1070  \end{eqnarray*}
                       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   \endgroup 
l.1070  \end{eqnarray*}
                       
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[339] [340] [341] [342] [343] [344] [345] [346] [347] [348] [349] [350] [351]

LaTeX Warning: Command \textendash invalid in math mode on input line 1109.

[352] [353] [354] [355] [356] [357] [358] [359]

! Package inputenc Error: Unicode character âˆ’ (U+2212)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1133 $ X_{iâˆ’
                1} $
You may provide a definition with
\DeclareUnicodeCharacter 

[360] [361] [362] [363] [364] [365] [366] [367] [368] [369] [370] [371] [372] [
373] [374] [375] [376] [377] [378] [379] [380] [381] [382] [383] [384] [385] [3
86] [387] [388] [389]

! Package inputenc Error: Unicode character âˆ’ (U+2212)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1223 ...= lcm(\lambda(p), \lambda(q)) = lcm(pâˆ’
                                                  1, qâˆ’1)$
You may provide a definition with
\DeclareUnicodeCharacter 


! Package inputenc Error: Unicode character âˆ’ (U+2212)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1223 ...lambda(p), \lambda(q)) = lcm(pâˆ’1, qâˆ’
                                                  1)$
You may provide a definition with
\DeclareUnicodeCharacter 

[390] [391] [392] [393] [394]

! Package inputenc Error: Unicode character âˆ’ (U+2212)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1238 $ d \equiv {e}^{âˆ’
                          1} (mod \lambda(n))$
You may provide a definition with
\DeclareUnicodeCharacter 

[395] [396] [397] [398] [399]

! Package inputenc Error: Unicode character âˆ’ (U+2212)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1253 $ \phi(n) = (p âˆ’
                          1)(q âˆ’ 1)$
You may provide a definition with
\DeclareUnicodeCharacter 


! Package inputenc Error: Unicode character âˆ’ (U+2212)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1253 $ \phi(n) = (p âˆ’ 1)(q âˆ’
                                   1)$
You may provide a definition with
\DeclareUnicodeCharacter 

[400] [401] [402] [403]

! Package inputenc Error: Unicode character â‰¤ (U+2264)
(inputenc)                not set up for use with LaTeX.

See the inputenc package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1265 $ 0 â‰¤
               m < n$
You may provide a definition with
\DeclareUnicodeCharacter 

[404] [405] [406] [407] [408] [409] [410] [411] [412] [413] [414] [415] [416] [
417] [418]
Overfull \hbox (40.39525pt too wide) in paragraph at lines 1310--1312
[]$\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 b[]; b[]; :::; b[]\OT1/cmr/m/n/10 ) = (0\O
ML/cmm/m/it/10 x\OT1/cmr/m/n/10 6\OML/cmm/m/it/10 D\OT1/cmr/m/n/10 6\OML/cmm/m/
it/10 F; \OT1/cmr/m/n/10 0\OML/cmm/m/it/10 x\OT1/cmr/m/n/10 6854\OML/cmm/m/it/1
0 ; \OT1/cmr/m/n/10 0\OML/cmm/m/it/10 x\OT1/cmr/m/n/10 676\OML/cmm/m/it/10 E; \
OT1/cmr/m/n/10 0\OML/cmm/m/it/10 x\OT1/cmr/m/n/10 694\OML/cmm/m/it/10 A; \OT1/c
mr/m/n/10 0\OML/cmm/m/it/10 x\OT1/cmr/m/n/10 2064\OML/cmm/m/it/10 ; \OT1/cmr/m/
n/10 0\OML/cmm/m/it/10 x\OT1/cmr/m/n/10 6\OML/cmm/m/it/10 B\OT1/cmr/m/n/10 45\O
ML/cmm/m/it/10 ; \OT1/cmr/m/n/10 0\OML/cmm/m/it/10 x\OT1/cmr/m/n/10 7865\OML/cm
m/m/it/10 ; \OT1/cmr/m/n/10 0\OML/cmm/m/it/10 x\OT1/cmr/m/n/10 6\OML/cmm/m/it/1
0 C\OT1/cmr/m/n/10 41)$
 []

[419] [420] [421] [422] [423] [424] [425] [426] [427] [428] [429] [430] [431] [
432] [433] [434] [435] [436] [437] [438] [439] [440] [441] [442] [443] [444] [4
45] [446]

LaTeX Warning: Command \texttimes invalid in math mode on input line 1396.


LaTeX Warning: Command \texttimes invalid in math mode on input line 1396.

Missing character: There is no Ö in font cmr10!
[447] [448]
Overfull \hbox (39.69653pt too wide) detected at line 1404
\OML/cmm/m/it/10 G\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 x\OT1/cmr/m/n/10 ) = \OML/c
mm/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cm
m/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm
/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/
m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m
/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/
it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/i
t/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it
/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it/10 x[] \OT1/cmr/m/n/10 + \OML/cmm/m/it/
10 x \OT1/cmr/m/n/10 + 1
 []

[449] [450] [451] [452] [453] [454] [455] [456] [457] [458] [459] [460] [461]
Overfull \hbox (100.1639pt too wide) in paragraph at lines 1443--1445
[]$[] \OT1/cmr/m/n/10 = \OML/cmm/m/it/10 prf \OT1/cmr/m/n/10 + (\OML/cmm/m/it/1
0 SKEYSEED;  Ni \OMS/cmsy/m/n/10 j \OML/cmm/m/it/10 Nr \OMS/cmsy/m/n/10 j \OML/
cmm/m/it/10 SPIi \OMS/cmsy/m/n/10 j \OML/cmm/m/it/10 SPIr\OT1/cmr/m/n/10 )$
 []

[462] [463] [464] [465] [466] [467] [468] [469] [470] [471] [472] [473] [474] [
475] [476] [477] (./_formulas.aux) ) 
Here is how much of TeX's memory you used:
 1378 strings out of 478856
 19884 string characters out of 5858638
 317223 words of memory out of 6000000
 19058 multiletter control sequences out of 15000+600000
 403765 words of font info for 28 fonts, out of 8000000 for 9000
 1137 hyphenation exceptions out of 8191
 70i,7n,76p,224b,101s stack positions out of 5000i,500n,10000p,200000b,80000s

Output written on _formulas.dvi (477 pages, 106376 bytes).
